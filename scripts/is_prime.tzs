contract prime_num(x: int){
    
    entry main(){
        let n: int = 16;
        let res:int = is_prime(n);
    }

    func abs(x:int):int{
        if (x < 0){
            then{
                let n_x:int = x * (0 - 1);
                return n_x;
            }
            else{
                return x;
            }
        }
    }

    func sqrt(x:int):int{
        if (x == 0){
            then{
                return 0;
            }
            else{
                    let current:int = x / 2;
                    while( True ){
                        let next:int = (current + (x / current)) / 2;
                        let val:int = next - current;
                        let cond:int = val;
                        if ( cond == 0){
                        then{
                            return next;
                        }
                    }
                    current = next;
                }
            }
        }
    }

    func is_prime(x:int):int{
        let n:int = x/2;
        while(n > 1){
            let y:int = x/n;
            let temp:int = y*n;
            
            if (x == temp){
                then{
                    return 0;
                }
            }
            n = n-1;
        }
        return 1;
    }

}